# Generated by Django 5.2.5 on 2025-08-07 16:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_state',
            fields=[
                ('customer_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_state', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('manager_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Order_food_state',
            fields=[
                ('order_food_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_food_state', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Order_state',
            fields=[
                ('order_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_state', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ordered_food_state',
            fields=[
                ('ordered_food_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('ordered_food_state', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Payment_type',
            fields=[
                ('payment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation_state',
            fields=[
                ('reservation_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('reservation_state', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('salary_id', models.AutoField(primary_key=True, serialize=False)),
                ('basic', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overtime', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overtime_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('epf_employee', models.IntegerField()),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Staff_category',
            fields=[
                ('staff_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
                ('rank', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User_state',
            fields=[
                ('user_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_state', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='customUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_user', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superAdmin', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer_login',
            fields=[
                ('customer_login_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_login_info',
            fields=[
                ('customer_login_info_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(verbose_name=50)),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer_state'),
        ),
        migrations.CreateModel(
            name='Manager_login',
            fields=[
                ('manager_login_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Manager_login_info',
            fields=[
                ('manager_login_info_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(verbose_name=50)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_images/')),
                ('name', models.CharField(max_length=300)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ratings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('keywords', models.TextField()),
                ('availability', models.CharField(max_length=20)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('ratings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
                ('food_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.menu')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
                ('food_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.menu')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
                ('item_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.cart')),
                ('order_state_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.order_state')),
            ],
        ),
        migrations.CreateModel(
            name='Order_payment',
            fields=[
                ('order_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.order')),
                ('payment_type_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.payment_type')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.customer')),
                ('reservation_state_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.reservation_state')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation_payment',
            fields=[
                ('reservation_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_type_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.payment_type')),
                ('reservation_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryHistory',
            fields=[
                ('salary_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('salary_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.salary')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=50)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
                ('staff_category_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff_category')),
                ('user_state_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.user_state')),
            ],
        ),
        migrations.AddField(
            model_name='salary',
            name='staff_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='staff_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff'),
        ),
        migrations.CreateModel(
            name='Ordered_food',
            fields=[
                ('ordered_food_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.menu')),
                ('order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.order')),
                ('ordered_food_state_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.ordered_food_state')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='staff_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff'),
        ),
        migrations.AddField(
            model_name='customer',
            name='staff_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff'),
        ),
        migrations.CreateModel(
            name='Staff_attendance',
            fields=[
                ('staff_attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('overtime', models.IntegerField()),
                ('attendance_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.attendance')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_login',
            fields=[
                ('staff_login_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_login_info',
            fields=[
                ('staff_login_info_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(verbose_name=50)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('qty', models.CharField(max_length=50)),
                ('manager_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Table_info',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('seats', models.IntegerField()),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Reserved_tables',
            fields=[
                ('reserved_tables_id', models.AutoField(primary_key=True, serialize=False)),
                ('reservation_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.reservation')),
                ('table_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.table_info')),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='user_state_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rms_app.user_state'),
        ),
    ]
